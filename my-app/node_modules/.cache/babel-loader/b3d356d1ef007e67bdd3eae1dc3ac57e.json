{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\patil\\\\OneDrive\\\\Desktop\\\\Sites{projects}\\\\Netflix-clone\\\\my-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\patil\\\\OneDrive\\\\Desktop\\\\Sites{projects}\\\\Netflix-clone\\\\my-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\patil\\\\OneDrive\\\\Desktop\\\\Sites{projects}\\\\Netflix-clone\\\\my-app\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React from'react';import{useState,useEffect}from'react';import Youtube from'react-youtube';import movieTrailer from'movie-trailer';import axios from'../../axios';//I have default import here so i can rename variable\nimport{Wrapper,Content}from'./Row.style';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var IMG_BASE_URL='https://image.tmdb.org/t/p/original/';function Row(_ref){var title=_ref.title,fetchUrl=_ref.fetchUrl,backdrop=_ref.backdrop;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),trailerUrl=_useState4[0],setTrailerUrl=_useState4[1];useEffect(function(){// const fetchMovie = async() =>{ }\nfunction fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchUrl);case 2:request=_context.sent;setMovies(request.data.results);return _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchUrl]);// Options for trailer\nvar opts={height:\"420px\",width:\"100%\",playerVars:{autoplay:1}};// For Trailer\nvar handleClick=function handleClick(movie){if(trailerUrl){setTrailerUrl('');}else{movieTrailer((movie===null||movie===void 0?void 0:movie.name)||(movie===null||movie===void 0?void 0:movie.title)||'').then(function(url){var urlParams=new URLSearchParams(new URL(url).search);setTrailerUrl(urlParams.get('v'));}).catch(function(error){return console.log(error);});}console.log(movie.id);};return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsx(Content,{children:movies.map(function(movie){return/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(IMG_BASE_URL).concat(backdrop?movie.backdrop_path:movie.poster_path),alt:movie.name,className:\"\".concat(backdrop&&'large'),onClick:function onClick(){return handleClick(movie);},style:{cursor:'pointer'}},movie.id);})}),/*#__PURE__*/_jsx(\"div\",{className:\"box\",children:trailerUrl&&/*#__PURE__*/_jsx(Youtube,{videoId:trailerUrl,opts:opts,className:\"video\"})})]});}export default Row;","map":{"version":3,"sources":["C:/Users/patil/OneDrive/Desktop/Sites{projects}/Netflix-clone/my-app/src/components/row/index.js"],"names":["React","useState","useEffect","Youtube","movieTrailer","axios","Wrapper","Content","IMG_BASE_URL","Row","title","fetchUrl","backdrop","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","get","request","data","results","opts","height","width","playerVars","autoplay","handleClick","movie","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","id","map","backdrop_path","poster_path","cursor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState,useEffect } from 'react';\nimport Youtube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\n\nimport axios from '../../axios';  //I have default import here so i can rename variable\n\nimport { Wrapper,Content } from './Row.style';\n\nconst IMG_BASE_URL = 'https://image.tmdb.org/t/p/original/';\n\nfunction Row({ title,fetchUrl,backdrop }) {\n\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] = useState('');\n\n    useEffect(()=>{\n        // const fetchMovie = async() =>{ }\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            return request;\n        }\n\n        fetchData();\n    },[fetchUrl]);\n\n    // Options for trailer\n    const opts = {\n        height: \"420px\",\n        width: \"100%\",\n        playerVars: {\n            autoplay: 1,\n        }\n    }\n\n    // For Trailer\n    const handleClick = (movie) =>{\n        if(trailerUrl){\n            setTrailerUrl('');\n        }else{\n            movieTrailer(movie?.name || movie?.title || '')\n            .then((url) => {\n                const urlParams = new URLSearchParams(new URL(url).search);\n                setTrailerUrl(urlParams.get('v'));\n            })\n            .catch((error) => console.log(error))\n        }\n        console.log(movie.id)\n    };\n\n    return(\n        <Wrapper>\n            <h2>{title}</h2>\n\n            <Content>\n                {movies.map(movie => (\n                    <img src={`${IMG_BASE_URL}${backdrop? movie.backdrop_path : movie.poster_path}`} alt={movie.name} key={movie.id} className={`${backdrop && 'large'}`} onClick={()=> handleClick(movie)} style={{cursor:'pointer'}}/>\n                ))}\n            </Content>\n            <div className='box'>\n            {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} className='video'/>}\n            </div>\n        </Wrapper>\n    )\n}\n\nexport default Row;"]},"metadata":{},"sourceType":"module"}